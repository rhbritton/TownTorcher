{
  "name": "react-hammerjs",
  "version": "0.1.1",
  "description": "ReactJS / HammerJS integration. Support touch events in your React app.",
  "main": "src/Hammer.js",
  "author": {
    "name": "Jed Watson"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/JedWatson/react-hammerjs.git"
  },
  "dependencies": {
    "hammerjs": "~2.0.4",
    "react": "~0.12.0"
  },
  "devDependencies": {
    "browserify": "~6.2.0",
    "browserify-shim": "~3.8.0",
    "chalk": "~0.5.1",
    "del": "~0.1.3",
    "gulp": "~3.8.10",
    "gulp-bump": "~0.1.11",
    "gulp-git": "~0.5.4",
    "gulp-rename": "~1.2.0",
    "gulp-streamify": "~0.0.5",
    "gulp-uglify": "~1.0.1",
    "gulp-util": "~3.0.1",
    "merge-stream": "~0.1.6",
    "vinyl-source-stream": "~1.0.0"
  },
  "browserify-shim": {
    "react": "global:React"
  },
  "scripts": {
    "test": "echo \"no tests yet\" && exit 0"
  },
  "keywords": [
    "react",
    "react-component",
    "tap",
    "tappable",
    "touch",
    "hammer",
    "hammerjs",
    "mobile"
  ],
  "readme": "React-HammerJS\n==============\n\n[ReactJS](http://facebook.github.io/react/) / [HammerJS](http://hammerjs.github.io) integration. Support touch events in your React app.\n\n\n## Installation\n\nThe easiest way to use React-HammerJS is to install it from NPM and include it in your own React build process (using [Browserify](http://browserify.org), etc).\n\nYou can also use the standalone build by including `dist/hammer.js` in your page. If you use this, make sure you have already included React, and it is available as a global variable.\n\n```\nnpm install react-hammerjs --save\n```\n\n\n## Usage\n\nReact-HammerJS generates a React component (default `<span>`) which then has Hammer events bound to it so it can fire the handlers specified.\n\n## Properties\n\nThe `component` prop can be used to change the component rendered, which will have the touch events bound to it. It may be a string (any valid DOM tag) or a React component that implements the `getDOMNode()` method.\n\nThe following events are supported:\n\n* `onTap`\n* `onDoubleTap`\n* `onPan`\n* `onSwipe`\n* `onPress`\n* `onPinch`\n* `onRotate`\n\nYou can also provide an `action` property which is like the `onTap` event handler but will also be fired `onPress`.\n\n\n### Example\n\n```\nvar Hammer = require('react-hammerjs');\n\n<Hammer onTap={handleTap}>Tap Me</Hammer>\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/JedWatson/react-hammerjs/issues"
  },
  "homepage": "https://github.com/JedWatson/react-hammerjs",
  "_id": "react-hammerjs@0.1.1",
  "dist": {
    "shasum": "1ca9de586ccb2837b74704f01cb64669ea94f124"
  },
  "_from": "react-hammerjs@",
  "_resolved": "https://registry.npmjs.org/react-hammerjs/-/react-hammerjs-0.1.1.tgz"
}
